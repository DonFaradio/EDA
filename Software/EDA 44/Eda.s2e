{	"extensionName": "EDA 44",
	"description": "Control de la placa EDA 44",
	"author": "Don Faradio (donfaradio@gmail.com)",
	"homepage": "https://github.com/DonFaradio/EDA/wiki",
	"version": "1.4",
	"sort": 1,
	"extensionPort": 0,
	"firmware": "1.1",
	"javascriptURL":"js/eda.js",
	"blockSpecs": [
		["h","Comienzo del programa!","runArduino"],
		
		["B", "Entrada Digital pin %d.EDAin","getDigital","E1",
		{"encode":"{d0}","setup":"pinMode(A0+{0},INPUT);\n","inc":"","def":"","work":"digitalRead(A0+{0})","loop":""}],
		
		["R", "Entrada Analógica %d.EDAin","getAnalog","E1",
		{"encode":"{d0}","setup":"pinMode(A0+{0},INPUT);\n","inc":"","def":"","work":"analogRead(A0+{0})","loop":""}],
		
		["w", "Salida Digital %d.EDAout fijar estado %d.digital","runDigital", "S1", "HIGH",
		{"encode":"{d0}{d1}","setup":"pinMode({0},OUTPUT);\n","inc":"","def":"","work":"digitalWrite({0},{1});\n","loop":""}],
		
		["w", "Salida PWM %d.EDAout con valor %d.pwmvalue","runPwm", "S1", 0,
		{"encode":"{d0}{d1}","setup":"pinMode({0},OUTPUT);\n","inc":"","def":"","work":"analogWrite({0},{1});\n","loop":""}],
		
		["w", "Servo 180° %d.EDAout ángulo %d.servovalue","runServoArduino", "S1", 90,
		{"encode":"{d0}{d1}","setup":"servo_{0}.attach({0}); // init pin\n","inc":"#include <Servo.h>\n","def":"Servo servo_{0};\n","work":"servo_{0}.write({1}); // write to servo\n","loop":""}],
		
		["w", "Servo contínuo %d.EDAout velocidad %d.servocont %","runServoCont", "S1", "0",
		{"encode":"{d0}{d1}","setup":"servo_{0}.attach({0}); // init pin\n","inc":"#include <Servo.h>\n","def":"Servo servo_{0};\n","work":"servo_{0}.write(({1}*0.9)+90); // write to servo\n","loop":""}],
		
		["R", "Leer sensor ultrasónico entrada %d.EDAinUltrasonic","getUltrasonicArduino","S3",
		{"encode":"{d0}","setup":"","inc":"","def":"--separator--float getDistance(int trig,int echo){\npinMode(trig,OUTPUT);\ndigitalWrite(trig,LOW);\ndelayMicroseconds(2);\ndigitalWrite(trig,HIGH);\ndelayMicroseconds(10);\ndigitalWrite(trig,LOW);\npinMode(echo, INPUT);\nreturn pulseIn(echo,HIGH,30000)/58.0;\n}\n","work":"getDistance({0}-10,{0})","loop":""}],

		[ //DHT sensor library
			"w",
			"Inicializar DHT 11 en entrada %d.EDAin ",
			"DHT sensor begin",
			"E1",
			{
				"setup": "",
				"inc": "#include \"DHT.h\"\n",
				"def": "DHT dht(A0+{0},11);\n",
				"work": "",
				"loop": ""
			}
		],
		[
			"r",
			"DHT Temperatura",
			"DHT sensor get Temperature",
			"1",
			{
				"setup": "",
				"inc": "",
				"def": "",
				"work": "dht.readTemperature()",
				"loop": ""
			}
		],
		[
			"r",
			"DHT Humedad",
			"DHT sensor get Humidity",
			"1",
			{
				"setup": "",
				"inc": "",
				"def": "",
				"work": "dht.readHumidity()",
				"loop": ""
			}
		],
		
		["w","LCD mostrar texto %s","LCDshow","¡Hola Mundo!",
		{"setup":"lcd.begin(16, 2);\n","inc":"#include <LiquidCrystal.h>\n /*\n ------------------------------------------------------------\n |			¡Atención!								|\n | 	Al utilizar el LCD Shield con la interface EDA 44	|\n | 	no podrás utilizar E1 y S1 para otros dispositivos.	|\n------------------------------------------------------------\n */\n ","def":"LiquidCrystal lcd(8, 9, 4, 5, 6, 7);\n","work":"lcd.print({0});\n","loop":""}],

		["w","LCD limpiar","LCDclear",
		{"setup":"lcd.begin(16, 2);\n","inc":"#include <LiquidCrystal.h>\n /*\n ------------------------------------------------------------\n |			¡Atención!								|\n | 	Al utilizar el LCD Shield con la interface EDA 44	|\n | 	no podrás utilizar E1 y S1 para otros dispositivos.	|\n------------------------------------------------------------\n */\n ","def":"LiquidCrystal lcd(8, 9, 4, 5, 6, 7);\n","work":"lcd.clear();\n","loop":""}],

		["w","LCD posición del cursor: fila %d.lcdRow  columna %d.lcdCol ","LCDsetcursor",0,0,
		{"setup":"lcd.begin(16, 2);\n","inc":"#include <LiquidCrystal.h>\n /*\n ------------------------------------------------------------\n |			¡Atención!								|\n | 	Al utilizar el LCD Shield con la interface EDA 44	|\n | 	no podrás utilizar E1 y S1 para otros dispositivos.	|\n------------------------------------------------------------\n */\n ","def":"LiquidCrystal lcd(8, 9, 4, 5, 6, 7);\n","work":"lcd.setCursor({1},{0});\n","loop":""}],
	
		["R", "Joystick entrada %d.JOYin eje %d.EJE","getAnalogJoystick","E2","X",
		{"encode":"{d0}{d1}","setup":"","inc":"",
		"def":"--separator--float getJoystick(int in,int eje){\nint inconv = '1';\nchar X[]={'0','1','2','3'};\nchar Y[]={'4','5','4','5'};\nif(eje==0){\ninconv = X[in];\n}\nif(eje==1){\ninconv = Y[in];\n}\npinMode(A0+inconv,INPUT);\nreturn analogRead(A0+inconv);\n}\n","work":"getJoystick({0},{1})","loop":""}]
	
	],
	"menus": {
		"servovalue":["0","45","90","135","180"],
		"servocont":["-100","-50","0","50","100"],
		"pwmvalue":["0","50","100","150","255"],
		"digital":["HIGH","LOW"],
		"EDAin":["E1","E2","E3","E4"],
		"EDAout":["S1","S2","S3","S4"],
		"EDAinUltrasonic":["S3","S4"],
		"lcdRow":["0","1"],
		"lcdCol":["0","1","2","3","4","5","6","7","8","9","10","11","12","13","14","15"],
		"EJE":["X","Y"],
		"JOYin":["E2","E3"]
	},
	"values":{
		"run":2,
		"get":1,
		"digital":30,
		"analog":31,
		"pwm":32,
		"servo_pin":33,
		"HIGH":1,"LOW":0,
		"E1":0,"E2":1,"E3":2,"E4":3,
		"S1":10,"S2":11,"S3":12,"S4":13,
		"X":0,"Y":1
	},
	"translators":{
	}
}